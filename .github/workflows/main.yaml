# # Your workflow name.
# name: Deploy to heroku.

# # Run workflow on every push to main branch.
# on:
#   push:
#     branches: [main]

# # Your workflows jobs.
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Build, Push and Release a Docker container to Heroku. # Your custom step name
#         uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
#         with:
#           # Below you must provide variables for your Heroku app.

#           # The email address associated with your Heroku account.
#           # If you don't want to use repository secrets (which is recommended) you can do:
#           # email: my.email@example.com
#           email: ${{ secrets.HEROKU_EMAIL }}
          
#           # Heroku API key associated with provided user's email.
#           # Api Key is available under your Heroku account settings.
#           heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          
#           # Name of the heroku application to which the build is to be sent.
#           heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}

#           # (Optional, default: "./")
#           # Dockerfile directory.
#           # For example, if you have a Dockerfile in the root of your project, leave it as follows:
#           dockerfile_directory: ./

#           # (Optional, default: "Dockerfile")
#           # Dockerfile name.
#           dockerfile_name: Dockerfile

#           # (Optional, default: "")
#           # Additional options of docker build command.
#           docker_options: "--no-cache"

#           # (Optional, default: "web")
#           # Select the process type for which you want the docker container to be uploaded.
#           # By default, this argument is set to "web".
#           # For more information look at https://devcenter.heroku.com/articles/process-model
#           process_type: web
          


# Your workflow name.
name: Deploy to AWS.

# Run workflow on every push to main branch.
on:
  push:
    branches: [main]

# Your workflows jobs.
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
        aws-region: us-east-1 

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: demorepo
        IMAGE_TAG: latest #${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      
      
  
          
## ⬆ IMPORTANT PART ⬆ ###

      


### ⬇ IMPORTANT PART ⬇ ###

      